:py:mod:`trx.workflows`
=======================

.. py:module:: trx.workflows


Module Contents
---------------


Functions
~~~~~~~~~

.. autoapisummary::

   trx.workflows.convert_dsi_studio
   trx.workflows.convert_tractogram
   trx.workflows.tractogram_simple_compare
   trx.workflows.verify_header_compatibility
   trx.workflows.tractogram_visualize_overlap
   trx.workflows.generate_trx_from_scratch



Attributes
~~~~~~~~~~

.. autoapisummary::

   trx.workflows.dipy_available


.. py:data:: dipy_available
   :annotation: = True

   

.. py:function:: convert_dsi_studio(in_dsi_tractogram, in_dsi_fa, out_tractogram, remove_invalid=True, keep_invalid=False)


.. py:function:: convert_tractogram(in_tractogram, out_tractogram, reference, pos_dtype='float32', offsets_dtype='uint32')


.. py:function:: tractogram_simple_compare(in_tractograms, reference)


.. py:function:: verify_header_compatibility(in_files)


.. py:function:: tractogram_visualize_overlap(in_tractogram, reference, remove_invalid=True)


.. py:function:: generate_trx_from_scratch(reference, out_tractogram, positions_csv=False, positions=False, offsets=False, positions_dtype='float32', offsets_dtype='uint64', space_str='rasmm', origin_str='nifti', verify_invalid=True, dpv=[], dps=[], groups=[], dpg=[])


